#!/usr/bin/env python3

import time
import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def test_real_button_click():
    """Test pour forcer le clic sur le vrai bouton SITE N¬∞1 et attendre la redirection"""
    
    chrome_options = Options()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    chrome_options.add_argument("--disable-gpu")
    chrome_options.add_argument("--window-size=1920,1080")
    
    driver = webdriver.Chrome(options=chrome_options)
    
    try:
        logger.info("=== TEST CLIC R√âEL SUR BOUTON SITE N¬∞1 ===")
        
        # Setup oneblock.fr
        logger.info("üåê Acc√®s √† https://oneblock.fr/vote")
        driver.get("https://oneblock.fr/vote")
        time.sleep(3)
        
        # Saisir pseudo et cliquer ENVOYER
        logger.info("üìù Setup du vote...")
        username_input = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "input[placeholder*='pseudo'], input[name*='username'], input[id*='username']"))
        )
        username_input.clear()
        username_input.send_keys("TestUser456")
        
        # Cliquer ENVOYER
        envoyer_button = None
        for btn in driver.find_elements(By.TAG_NAME, "button"):
            if btn.text.strip() == "ENVOYER" and btn.is_displayed():
                envoyer_button = btn
                break
        
        if envoyer_button:
            driver.execute_script("arguments[0].click();", envoyer_button)
            logger.info("‚úÖ ENVOYER cliqu√©")
            time.sleep(5)
        
        # Trouver le bouton SITE N¬∞1 sp√©cifiquement
        logger.info("üîç Recherche du bouton SITE N¬∞1...")
        site1_button = None
        
        # Chercher tous les boutons
        all_buttons = driver.find_elements(By.TAG_NAME, "button")
        for btn in all_buttons:
            text = btn.text.strip()
            if "SITE N¬∞1" in text and "Votez maintenant" in text and btn.is_displayed():
                site1_button = btn
                logger.info(f"üéØ Bouton SITE N¬∞1 trouv√©: '{text}'")
                break
        
        if not site1_button:
            logger.error("‚ùå Bouton SITE N¬∞1 non trouv√©")
            return
        
        # Analyser l'√©tat avant clic
        logger.info("\nüìä √âTAT AVANT CLIC:")
        button_text_before = site1_button.text.strip()
        button_classes_before = site1_button.get_attribute('class')
        url_before = driver.current_url
        
        logger.info(f"   Texte bouton: '{button_text_before}'")
        logger.info(f"   Classes bouton: {button_classes_before}")
        logger.info(f"   URL: {url_before}")
        
        # Cliquer et surveiller INTENSIVEMENT
        logger.info("\nüñ±Ô∏è CLIC SUR SITE N¬∞1 ET SURVEILLANCE:")
        
        # Scroller vers le bouton
        driver.execute_script("arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});", site1_button)
        time.sleep(2)
        
        # CLIC
        site1_button.click()
        logger.info("‚úÖ Clic effectu√© sur SITE N¬∞1")
        
        # Surveiller pendant 30 secondes
        for wait_time in range(1, 31):
            time.sleep(1)
            
            # V√©rifier URL
            current_url = driver.current_url
            if current_url != url_before:
                logger.info(f"üéâ REDIRECTION D√âTECT√âE apr√®s {wait_time}s!")
                logger.info(f"   Nouvelle URL: {current_url}")
                
                # V√©rifier si c'est le bon site
                if 'serveur-prive.net' in current_url:
                    logger.info("üéØ SUCC√àS: Redirection vers serveur-prive.net!")
                    
                    # V√©rifier si le pseudo est pr√©rempli
                    time.sleep(3)
                    try:
                        username_fields = driver.find_elements(By.CSS_SELECTOR, "input[name*='username'], input[id*='username'], input[placeholder*='pseudo']")
                        for field in username_fields:
                            if field.is_displayed():
                                value = field.get_attribute('value')
                                placeholder = field.get_attribute('placeholder')
                                if value and value.strip():
                                    logger.info(f"‚úÖ PSEUDONYME PR√âREMPLI: '{value}'")
                                    return True
                                else:
                                    logger.info(f"üìù Champ username vide: value='{value}', placeholder='{placeholder}'")
                    except Exception as e:
                        logger.debug(f"Erreur v√©rification pseudonyme: {e}")
                        
                break
            
            # V√©rifier changement de texte du bouton
            try:
                new_button_text = site1_button.text.strip()
                if new_button_text != button_text_before:
                    logger.info(f"üîÑ Texte bouton chang√© (t={wait_time}s): '{new_button_text}'")
                    button_text_before = new_button_text
            except Exception:
                # Le bouton n'existe peut-√™tre plus
                logger.info(f"‚ö†Ô∏è Bouton non accessible (t={wait_time}s) - possible redirection")
            
            if wait_time % 5 == 0:
                logger.info(f"   ‚è≥ Attente {wait_time}s... URL: {current_url}")
        
        # √âtat final
        final_url = driver.current_url
        logger.info(f"\nüìä √âTAT FINAL:")
        logger.info(f"   URL finale: {final_url}")
        
        if final_url == url_before:
            logger.warning("‚ùå Aucune redirection apr√®s 30s")
            
            # V√©rifier l'√©tat du bouton
            try:
                final_button_text = site1_button.text.strip()
                logger.info(f"   Texte final du bouton: '{final_button_text}'")
            except:
                logger.info("   Bouton non accessible")
        else:
            logger.info("‚úÖ Redirection a eu lieu")
        
        input("\nüîç V√©rifiez manuellement oneblock.fr/vote pour voir l'√©tat des boutons, puis appuyez sur Entr√©e...")
        
    except Exception as e:
        logger.error(f"‚ùå Erreur g√©n√©rale: {e}")
    
    finally:
        driver.quit()

if __name__ == "__main__":
    test_real_button_click()